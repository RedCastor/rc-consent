{"version":3,"sources":["rc-consent.js"],"names":["rcc","hasInitialised","utils","escapeRegExp","str","replace","hasClass","element","selector","s","nodeType","className","indexOf","addClass","removeClass","regex","RegExp","this","interpolateString","callback","marker","matches","arguments","getCookie","name","value","document","cookie","parts","split","length","undefined","pop","shift","val_obj","JSON","parse","decodeURIComponent","e","setCookie","expiryDays","domain","path","secure","exdate","Date","setDate","getDate","isPlainObject","stringify","encodeURIComponent","toUTCString","push","join","deepExtend","target","source","prop","hasOwnProperty","throttle","limit","wait","apply","setTimeout","hash","i","chr","len","charCodeAt","normaliseHex","hex","substr","getContrast","r","parseInt","g","b","yiq","getLuminance","num","amt","R","B","G","newColour","toString","slice","isMobile","test","navigator","userAgent","obj","constructor","Object","traverseDOMPath","elem","parentNode","util","providers","cacheStatus","defaultProvider","id","trackingId","category","onInitialise","status","onAllow","onRevoke","onStatusChange","new_status","old_status","defaultOptions","formId","days","categories","setConsent","event","args","type","el_input","querySelectorAll","options","checked","mergeDefaultStatus","initialise","formIds","i_el_form","el_form","window","getElementById","addEventListener","clickSelector","el_click","i_el_click","defaultStatus","keys","i_cat","splice","concat","getStatus","call","addProvider","provider","getProviders","setStatus","is_status_change","curent_value","value_hash","getDefaultStatus","cookie_hash","clearStatus","default_value","cat_status","hasConsented"],"mappings":"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","file":"rc-consent.js","sourcesContent":["/**\r\n * RC Consent\r\n *\r\n * Inspared by https://github.com/insites/cookieconsent\r\n */\r\n(function(rcc) {\r\n    \"use strict\";\r\n\r\n    //Prevent run twice\r\n    if (rcc.hasInitialised) {\r\n        return;\r\n    }\r\n\r\n    var utils = {\r\n        // https://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\r\n        escapeRegExp: function(str) {\r\n            return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\r\n        },\r\n        hasClass: function(element, selector) {\r\n            var s = ' ';\r\n            return (\r\n                element.nodeType === 1 &&\r\n                (s + element.className + s)\r\n                    .replace(/[\\n\\t]/g, s)\r\n                    .indexOf(s + selector + s) >= 0\r\n            );\r\n        },\r\n        addClass: function(element, className) {\r\n            element.className += ' ' + className;\r\n        },\r\n        removeClass: function(element, className) {\r\n            var regex = new RegExp('\\\\b' + this.escapeRegExp(className) + '\\\\b');\r\n            element.className = element.className.replace(regex, '');\r\n        },\r\n        interpolateString: function(str, callback) {\r\n            var marker = /{{([a-z][a-z0-9\\-_]*)}}/gi;\r\n            return str.replace(marker, function(matches) {\r\n                return callback(arguments[1]) || '';\r\n            });\r\n        },\r\n        getCookie: function(name) {\r\n            var value = '; ' + document.cookie;\r\n            var parts = value.split('; ' + name + '=');\r\n\r\n            value = parts.length < 2 ? undefined : parts.pop().split(';').shift();\r\n\r\n            try {\r\n                var val_obj = JSON.parse(decodeURIComponent(value));\r\n\r\n                value = val_obj;\r\n            }\r\n            catch (e) {}\r\n\r\n            return value;\r\n        },\r\n        setCookie: function(name, value, expiryDays, domain, path, secure) {\r\n            var exdate = new Date();\r\n            exdate.setDate(exdate.getDate() + (expiryDays || 365));\r\n\r\n            if (this.isPlainObject(value)) {\r\n                value = JSON.stringify(value);\r\n            }\r\n\r\n            value = encodeURIComponent(value);\r\n\r\n            var cookie = [\r\n                name + '=' + value,\r\n                'expires=' + exdate.toUTCString(),\r\n                'path=' + (path || '/')\r\n            ];\r\n\r\n            if (domain) {\r\n                cookie.push('domain=' + domain);\r\n            }\r\n            if (secure) {\r\n                cookie.push('secure');\r\n            }\r\n\r\n            document.cookie = cookie.join(';');\r\n        },\r\n        // only used for extending the initial options\r\n        deepExtend: function(target, source) {\r\n            for (var prop in source) {\r\n                if (source.hasOwnProperty(prop)) {\r\n                    if (\r\n                        prop in target &&\r\n                        this.isPlainObject(target[prop]) &&\r\n                        this.isPlainObject(source[prop])\r\n                    ) {\r\n                        this.deepExtend(target[prop], source[prop]);\r\n                    } else {\r\n                        target[prop] = source[prop];\r\n                    }\r\n                }\r\n            }\r\n            return target;\r\n        },\r\n        // only used for throttling the 'mousemove' event (used for animating the revoke button when `animateRevokable` is true)\r\n        throttle: function(callback, limit) {\r\n            var wait = false;\r\n            return function() {\r\n                if (!wait) {\r\n                    callback.apply(this, arguments);\r\n                    wait = true;\r\n                    setTimeout(function() {\r\n                        wait = false;\r\n                    }, limit);\r\n                }\r\n            };\r\n        },\r\n        // only used for hashing json objects (used for hash status objects)\r\n        hash: function(str) {\r\n            var hash = 0,\r\n                i,\r\n                chr,\r\n                len;\r\n            if (str.length === 0) {\r\n                return hash;\r\n            }\r\n\r\n            for (i = 0, len = str.length; i < len; ++i) {\r\n\r\n                chr = str.charCodeAt(i);\r\n                hash = (hash << 5) - hash + chr;\r\n                hash |= 0;\r\n            }\r\n\r\n            return hash & 0xfffffff; //Always positive\r\n        },\r\n        normaliseHex: function(hex) {\r\n            if (hex[0] === '#') {\r\n                hex = hex.substr(1);\r\n            }\r\n            if (hex.length === 3) {\r\n                hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n            }\r\n            return hex;\r\n        },\r\n        // used to get text colors if not set\r\n        getContrast: function(hex) {\r\n            hex = this.normaliseHex(hex);\r\n            var r = parseInt(hex.substr(0, 2), 16);\r\n            var g = parseInt(hex.substr(2, 2), 16);\r\n            var b = parseInt(hex.substr(4, 2), 16);\r\n            var yiq = (r * 299 + g * 587 + b * 114) / 1000;\r\n            return yiq >= 128 ? '#000' : '#fff';\r\n        },\r\n        // used to change color on highlight\r\n        getLuminance: function(hex) {\r\n            var num = parseInt(this.normaliseHex(hex), 16),\r\n                amt = 38,\r\n                R = (num >> 16) + amt,\r\n                B = ((num >> 8) & 0x00ff) + amt,\r\n                G = (num & 0x0000ff) + amt;\r\n            var newColour = (\r\n                0x1000000 +\r\n                (R < 255 ? (R < 1 ? 0 : R) : 255) * 0x10000 +\r\n                (B < 255 ? (B < 1 ? 0 : B) : 255) * 0x100 +\r\n                (G < 255 ? (G < 1 ? 0 : G) : 255)\r\n            )\r\n                .toString(16)\r\n                .slice(1);\r\n            return '#' + newColour;\r\n        },\r\n        isMobile: function() {\r\n            return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n                navigator.userAgent\r\n            );\r\n        },\r\n        isPlainObject: function(obj) {\r\n            // The code \"typeof obj === 'object' && obj !== null\" allows Array objects\r\n            return (\r\n                typeof obj === 'object' && obj !== null && obj.constructor === Object\r\n            );\r\n        },\r\n        traverseDOMPath: function(elem, className) {\r\n            if (!elem || !elem.parentNode) {\r\n                return null;\r\n            }\r\n\r\n            if (util.hasClass(elem, className)) {\r\n                return elem;\r\n            }\r\n\r\n            return this.traverseDOMPath(elem.parentNode, className);\r\n        }\r\n    };\r\n\r\n    var providers = [];\r\n    var cacheStatus = {};\r\n\r\n    var defaultProvider = {\r\n        id: null,\r\n        trackingId: null,\r\n        category: 'analytics',\r\n        onInitialise: function(rcc, status) {},\r\n        onAllow: function(rcc) {},\r\n        onRevoke: function(rcc) {},\r\n        onStatusChange: function(rcc, new_status, old_status) {}\r\n    };\r\n\r\n    var defaultOptions = {\r\n        formId: null,\r\n        cookie: {\r\n            name: 'rcc_consent',\r\n            domain: '',\r\n            path: '/',\r\n            days: 7\r\n        },\r\n        categories: [\r\n            'analytics'\r\n        ]\r\n    };\r\n\r\n    /**\r\n     * Set Consent for event\r\n     *\r\n     * @param event\r\n     * @param args\r\n     */\r\n    var setConsent = function( event, args ) {\r\n\r\n        if (!args && event.type === 'submit') {\r\n\r\n            var el_input = event.target.querySelectorAll('input[name]');\r\n\r\n            if (el_input.length) {\r\n                args = {};\r\n\r\n                for (var i = 0; i < el_input.length; i++) {\r\n\r\n                    if(el_input[i].type === 'checkbox' && rcc.options.categories.indexOf(el_input[i].name) >= 0) {\r\n                        args[el_input[i].name] = el_input[i].checked;\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        rcc.setConsent(args);\r\n    };\r\n\r\n\r\n    /**\r\n     * Merge default status target with source not extend target\r\n     * @param target\r\n     * @param source\r\n     * @returns {*}\r\n     */\r\n    function mergeDefaultStatus (target, source) {\r\n\r\n        for (var prop in target) {\r\n            if (target.hasOwnProperty(prop)) {\r\n\r\n                if (source[prop] === true || source[prop] === false) {\r\n                    target[prop] = source[prop];\r\n                }\r\n            }\r\n        }\r\n\r\n        return target;\r\n    }\r\n\r\n\r\n    rcc = {\r\n        initialise: function(options) {\r\n\r\n            //Init options\r\n            utils.deepExtend((this.options = {}), defaultOptions);\r\n\r\n            if (utils.isPlainObject(options)) {\r\n                utils.deepExtend(this.options, options);\r\n            }\r\n\r\n            //Add Event Listner for submit form ids\r\n            if (this.options.formIds) {\r\n\r\n                for (var i_el_form = 0; i_el_form < this.options.formIds.length; i_el_form++) {\r\n\r\n                    var el_form = window.document.getElementById(this.options.formIds[i_el_form]);\r\n\r\n                    el_form.addEventListener('submit', setConsent);\r\n                }\r\n            }\r\n\r\n            //Add Event Listner for click button\r\n            if (this.options.clickSelector) {\r\n\r\n                var el_click = window.document.querySelectorAll(this.options.clickSelector);\r\n\r\n                for (var i_el_click = 0; i_el_click < el_click.length; i_el_click++) {\r\n\r\n                    el_click[i_el_click].addEventListener('click', setConsent);\r\n                }\r\n            }\r\n\r\n            //Add Event Listner for set consent\r\n            window.document.addEventListener('rccSetConsent', setConsent);\r\n\r\n            //Init Categories\r\n            var categories = [];\r\n            var category;\r\n\r\n            if (utils.isPlainObject(this.options.defaultStatus)) {\r\n                categories = Object.keys(this.options.defaultStatus);\r\n            }\r\n\r\n            for (var i_cat = 0; i_cat < providers.length; i_cat++) {\r\n                category = providers[i_cat].category || 'analytics';\r\n\r\n                if (categories.indexOf(category) === -1) {\r\n                    categories.push(category);\r\n                }\r\n\r\n                //Add categories from provider\r\n                if (this.options.categories.indexOf(category) >= 0) {\r\n                    this.options.categories.splice(this.options.categories.indexOf(category), 1);\r\n                }\r\n            }\r\n\r\n            //Concat default\r\n            this.options.categories = categories.concat(this.options.categories);\r\n\r\n            var status = this.getStatus();\r\n\r\n\r\n            //Initialize each provider\r\n            for (var i = 0; i < providers.length; i++) {\r\n\r\n                category = providers[i].category;\r\n\r\n                providers[i].onInitialise.call(providers[i], this, status);\r\n\r\n                if (category && status[category] === true) {\r\n                    providers[i].onAllow.call(providers[i], this);\r\n                }\r\n            }\r\n\r\n            cacheStatus = status;\r\n        },\r\n        addProvider: function (options) {\r\n\r\n            if (!options.id || options.id === '') {\r\n                return false;\r\n            }\r\n\r\n            var provider = {};\r\n\r\n            utils.deepExtend(provider, defaultProvider);\r\n\r\n            if (utils.isPlainObject(options)) {\r\n                utils.deepExtend(provider, options);\r\n            }\r\n\r\n            providers.push(provider);\r\n\r\n            return true;\r\n        },\r\n        getProviders: function() {\r\n            return providers;\r\n        },\r\n        setConsent: function( args  ) {\r\n\r\n            this.setStatus(args);\r\n\r\n            var status = this.getStatus();\r\n            var is_status_change = false;\r\n\r\n            //Status change\r\n            if (JSON.stringify(status) !== JSON.stringify(cacheStatus)) {\r\n                is_status_change = true;\r\n            }\r\n\r\n            //Call onChange revoke or allow for each provider\r\n            for (var i = 0; i < providers.length; i++) {\r\n                var category = providers[i].category;\r\n\r\n                if (is_status_change) {\r\n                    providers[i].onStatusChange.call(providers[i], this, status, cacheStatus);\r\n                }\r\n\r\n                if (status[category] !== cacheStatus[category]) {\r\n\r\n                    if (!status[category]) {\r\n                        providers[i].onRevoke.call(providers[i], this);\r\n                    }\r\n                    else {\r\n                        providers[i].onAllow.call(providers[i], this);\r\n                    }\r\n                }\r\n            }\r\n\r\n            cacheStatus = status;\r\n        },\r\n        getStatus: function() {\r\n\r\n            var cookie = rcc.options.cookie;\r\n            var curent_value = utils.getCookie(cookie.name);\r\n            var value_hash = utils.getCookie(cookie.name + '_hash');\r\n            var value = this.getDefaultStatus();\r\n\r\n            if (utils.isPlainObject(curent_value)) {\r\n\r\n                mergeDefaultStatus(value, curent_value);\r\n            }\r\n\r\n            //Update cookie if current value not same as default value merge with current value.\r\n            if (JSON.stringify(curent_value) !== JSON.stringify(value)) {\r\n\r\n                utils.setCookie(cookie.name, value, 0, cookie.domain, cookie.path);\r\n            }\r\n\r\n            //Remove hash not same as cookie status\r\n            if (value_hash !== utils.hash(JSON.stringify(value))) {\r\n\r\n                utils.setCookie(this.options.cookie.name + '_hash', '', -1, cookie.domain, cookie.path);\r\n            }\r\n\r\n            return value;\r\n        },\r\n        setStatus: function( value ) {\r\n\r\n            var cookie = this.options.cookie;\r\n\r\n            if (!utils.isPlainObject(value)) {\r\n\r\n                var curent_value = utils.getCookie(cookie.name);\r\n\r\n                value = this.getDefaultStatus();\r\n\r\n                if (utils.isPlainObject(curent_value)) {\r\n                    mergeDefaultStatus(value, curent_value);\r\n                }\r\n\r\n            }\r\n\r\n            var cookie_hash = utils.hash(JSON.stringify(value));\r\n\r\n            utils.setCookie(cookie.name, value, 0, cookie.domain, cookie.path);\r\n            utils.setCookie(cookie.name + '_hash', cookie_hash, cookie.days, cookie.domain, cookie.path);\r\n        },\r\n        clearStatus: function() {\r\n\r\n            var cookie = this.options.cookie;\r\n\r\n            utils.setCookie(cookie.name, '', -1, cookie.domain, cookie.path);\r\n            utils.setCookie(cookie.name + '_hash', '', -1, cookie.domain, cookie.path);\r\n\r\n            cacheStatus = this.getDefaultStatus();\r\n        },\r\n        getDefaultStatus: function() {\r\n\r\n            var default_value = utils.isPlainObject(this.options.defaultStatus) ? this.options.defaultStatus : {};\r\n            var status = {};\r\n\r\n            for (var i = 0; i < this.options.categories.length; i++) {\r\n\r\n                var cat_status = default_value[this.options.categories[i]];\r\n\r\n                status[this.options.categories[i]] = cat_status === true ? true : false;\r\n            }\r\n\r\n            return status;\r\n        },\r\n        hasConsented: function ( category ) {\r\n\r\n            var status = this.getStatus();\r\n\r\n            var value_hash = utils.getCookie(this.options.cookie.name + '_hash');\r\n\r\n            if (!value_hash) {\r\n                return false;\r\n            }\r\n            else if (!category) {\r\n                return true;\r\n            }\r\n\r\n            return !!status[category];\r\n        }\r\n    };\r\n\r\n\r\n    //Prevent run twice\r\n    rcc.hasInitialised = true;\r\n\r\n    window.rcc = rcc;\r\n})(window, window.rcc || {});"],"sourceRoot":"dist"}