{"version":3,"sources":["rc-consent-angular.js"],"names":["angular","rcc","module","provider","rcConsentProvider","this","$get","hasConsented","category","isFunction","getStatus","setStatus","statuses","setConsent","args","isString","document","querySelector","setForm","getProviders","addProvider","options","initialise","filter","rcConsent","value","window"],"mappings":"CAAA,SAAUA,SAASC;IACf;IAEA,IAAIC,SAASF,QAAQE,OAAO,aAAa;IAEzCA,OAAOC,SAAS,aAAa,EAAC,SAASC;QAEnCC,KAAKC,OAAO,EAAC;YAET,OAAO;gBACHC,cAAc,SAAUC;oBAEpB,KAAKP,QAAQD,QAAQS,WAAWR,IAAIM,eAAe;wBAC/C,OAAO;;oBAGX,OAAON,IAAIM,aAAaC;;gBAE5BE,WAAW;oBAEP,KAAKT,QAAQD,QAAQS,WAAWR,IAAIS,YAAY;wBAC5C,OAAO;;oBAGX,OAAOT,IAAIS;;gBAEfC,WAAW,SAAUC;oBAEjB,KAAKX,QAAQD,QAAQS,WAAWR,IAAIU,YAAY;wBAC5C,OAAO;;oBAGXV,IAAIU,UAAWC;oBAEf,OAAO;;gBAEXC,YAAY,SAAUC;oBAElB,KAAKb,QAAQD,QAAQS,WAAWR,IAAIY,aAAa;wBAC7C,OAAO;;oBAGX,IAAIb,QAAQe,SAASD,OAAO;wBACxBA,OAAOE,SAASC,cAAcH;;oBAGlCb,IAAIY,WAAYC;oBAEhB,OAAO;;gBAEXI,SAAS,SAAUJ;oBAEf,KAAKb,QAAQD,QAAQS,WAAWR,IAAIiB,UAAU;wBAC1C,OAAO;;oBAGX,IAAIlB,QAAQe,SAASD,OAAO;wBACxBA,OAAOE,SAASC,cAAcH;;oBAGlCb,IAAIiB,QAASJ;oBAEb,OAAO;;gBAEXK,cAAc;oBAEV,KAAKlB,QAAQD,QAAQS,WAAWR,IAAIkB,eAAe;wBAC/C,OAAO;;oBAGX,OAAOlB,IAAIkB;;;;QAWvBd,KAAKe,cAAc,SAAUC;YAEzB,KAAKpB,QAAQD,QAAQS,WAAWR,IAAImB,cAAc;gBAC9C,OAAO;;YAGXnB,IAAImB,YAAaC;YAEjB,OAAO;;QAUXhB,KAAKiB,aAAa,SAAUD;YAExB,KAAKpB,QAAQD,QAAQS,WAAWR,IAAIqB,aAAa;gBAC7C,OAAO;;YAGXrB,IAAIqB,WAAYD;YAEhB,OAAO;;;IAMfnB,OAAOqB,OAAO,gBAAgB,EAAE,aAAa,SAASC;QAElD,OAAO,SAAUhB;YAEb,OAAOgB,UAAUjB,aAAaC;;;IAKtCN,OAAOqB,OAAO,oBAAoB,EAAE,aAAa,SAASC;QAEtD,OAAO,SAAUC;YAEb,OAAOD,UAAUd;;;IAIzBR,OAAOqB,OAAO,oBAAoB,EAAE,aAAa,SAASC;QAEtD,OAAO,SAAUZ;YAEb,OAAOY,UAAUb,UAAWC;;;IAIpCV,OAAOqB,OAAO,cAAc,EAAE,aAAa,SAASC;QAEhD,OAAO,SAAUV;YAEb,OAAOU,UAAUX,WAAYC;;;IAIrCZ,OAAOqB,OAAO,kBAAkB,EAAE,aAAa,SAASC;QAEpD,OAAO,SAAUV;YAEb,OAAOU,UAAUN,QAASJ;;;IAIlCZ,OAAOqB,OAAO,uBAAuB,EAAE,aAAa,SAASC;QAEzD,OAAO,SAAUC;YAEb,OAAOD,UAAUL;;;EA9J7B,CAkKGO,OAAO1B,SAAS0B,OAAOzB","file":"rc-consent-angular.js","sourcesContent":["(function(angular, rcc){\r\n    'use strict';\r\n\r\n    var module = angular.module('rcConsent', []);\r\n\r\n    module.provider('rcConsent', [function rcConsentProvider() {\r\n\r\n        this.$get = [function() {\r\n\r\n            return {\r\n                hasConsented: function( category ) {\r\n\r\n                    if (!rcc || !angular.isFunction(rcc.hasConsented)) {\r\n                        return false;\r\n                    }\r\n\r\n                    return rcc.hasConsented(category);\r\n                },\r\n                getStatus: function() {\r\n\r\n                    if (!rcc || !angular.isFunction(rcc.getStatus)) {\r\n                        return {};\r\n                    }\r\n\r\n                    return rcc.getStatus();\r\n                },\r\n                setStatus: function( statuses ) {\r\n\r\n                    if (!rcc || !angular.isFunction(rcc.setStatus)) {\r\n                        return false;\r\n                    }\r\n\r\n                    rcc.setStatus( statuses );\r\n\r\n                    return true;\r\n                },\r\n                setConsent: function( args ) {\r\n\r\n                    if (!rcc || !angular.isFunction(rcc.setConsent)) {\r\n                        return false;\r\n                    }\r\n\r\n                    if (angular.isString(args)) {\r\n                        args = document.querySelector(args);\r\n                    }\r\n\r\n                    rcc.setConsent( args );\r\n\r\n                    return true;\r\n                },\r\n                setForm: function( args ) {\r\n\r\n                    if (!rcc || !angular.isFunction(rcc.setForm)) {\r\n                        return false;\r\n                    }\r\n\r\n                    if (angular.isString(args)) {\r\n                        args = document.querySelector(args);\r\n                    }\r\n\r\n                    rcc.setForm( args );\r\n\r\n                    return true;\r\n                },\r\n                getProviders: function() {\r\n\r\n                    if (!rcc || !angular.isFunction(rcc.getProviders)) {\r\n                        return [];\r\n                    }\r\n\r\n                    return rcc.getProviders();\r\n                }\r\n            };\r\n        }];\r\n\r\n        /**\r\n         * Initialise rcc\r\n         *\r\n         * @param options\r\n         * @returns {boolean}\r\n         */\r\n        this.addProvider = function( options ) {\r\n\r\n            if (!rcc || !angular.isFunction(rcc.addProvider)) {\r\n                return false;\r\n            }\r\n\r\n            rcc.addProvider( options );\r\n\r\n            return true;\r\n        };\r\n\r\n\r\n        /**\r\n         * Initialise rcc\r\n         *\r\n         * @param options\r\n         * @returns {boolean}\r\n         */\r\n        this.initialise = function( options ) {\r\n\r\n            if (!rcc || !angular.isFunction(rcc.initialise)) {\r\n                return false;\r\n            }\r\n\r\n            rcc.initialise( options );\r\n\r\n            return true;\r\n        };\r\n\r\n    }]);\r\n\r\n\r\n    module.filter('hasConsented', [ 'rcConsent', function(rcConsent) {\r\n\r\n        return function( category ) {\r\n\r\n            return rcConsent.hasConsented(category);\r\n        };\r\n    }]);\r\n\r\n\r\n    module.filter('getConsentStatus', [ 'rcConsent', function(rcConsent) {\r\n\r\n        return function( value ) {\r\n\r\n            return rcConsent.getStatus();\r\n        };\r\n    }]);\r\n\r\n    module.filter('setConsentStatus', [ 'rcConsent', function(rcConsent) {\r\n\r\n        return function( statuses ) {\r\n\r\n            return rcConsent.setStatus( statuses );\r\n        };\r\n    }]);\r\n\r\n    module.filter('setConsent', [ 'rcConsent', function(rcConsent) {\r\n\r\n        return function( args ) {\r\n\r\n            return rcConsent.setConsent( args );\r\n        };\r\n    }]);\r\n\r\n    module.filter('setConsentForm', [ 'rcConsent', function(rcConsent) {\r\n\r\n        return function( args ) {\r\n\r\n            return rcConsent.setForm( args );\r\n        };\r\n    }]);\r\n\r\n    module.filter('getConsentProviders', [ 'rcConsent', function(rcConsent) {\r\n\r\n        return function( value ) {\r\n\r\n            return rcConsent.getProviders();\r\n        };\r\n    }]);\r\n\r\n})(window.angular, window.rcc);\r\n"],"sourceRoot":"dist"}